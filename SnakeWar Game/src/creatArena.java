import java.io.IOException;

import javax.microedition.lcdui.*;
import javax.microedition.lcdui.game.*;
import javax.microedition.midlet.MIDlet;
import java.util.*;


class creatArena extends GameCanvas 
{
	
		public TiledLayer Background,Arena;
			String imagename="/village.png";
	String imagename1="/town.png";

	Image backgroundImage,arenaImage;


public creatArena()
{
	super(true);
}

// Creats Arena which is selected by user
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

public void creatArena(int whichArena)
{
//************************************************************
// Arena Country Side 1
	if(whichArena==1) 
	{
		
try
{
backgroundImage = Image.createImage(imagename);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
                { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 },
                { 4, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 10, 10, 10, 0, 0, 0, 10, 10, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0 },
                { 0, 0, 0, 10, 10, 10, 0, 0, 0, 10, 10, 10, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 6, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 6 },
                { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
 	}
//**********************************************************	
	
	
//************************************************************
// Arena Country Side 2
	else if(whichArena==2) 
	{

try
{
backgroundImage = Image.createImage(imagename);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                 { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 5, 38, 39, 39, 39, 40, 7, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 5, 38, 39, 39, 39, 40, 7, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 },
                { 4, 19, 0, 0, 67, 0, 0, 0, 0, 0, 0, 67, 0, 20, 4 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 67, 0, 0, 17, 6, 6, 6, 6, 6, 18, 0, 0, 67, 0 },
                { 0, 0, 0, 0, 5, 44, 31, 31, 31, 32, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 47, 60, 60, 60, 48, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 47, 60, 60, 60, 48, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 47, 60, 60, 60, 48, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 47, 60, 60, 60, 48, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 47, 60, 60, 60, 48, 7, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 5, 46, 64, 64, 64, 45, 7, 0, 0, 0, 0 },
                { 0, 67, 0, 0, 20, 4, 4, 4, 4, 4, 19, 0, 0, 67, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 6, 18, 0, 0, 67, 0, 0, 0, 0, 0, 67, 0, 0, 17, 6 },
                { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
        	}
//**********************************************************	


//************************************************************
// Arena Country Side 3
	else if(whichArena==3) 
	{

try
{
backgroundImage = Image.createImage(imagename1);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                 { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
              { 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 30, 30, 30, 30, 0, 0, 0, 30, 30, 30, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 30, 30, 0, 30, 30, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 30, 30, 0, 30, 30, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 30, 30, 30, 0, 0, 0, 30, 30, 30, 30, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
        
        	}
//**********************************************************	


//************************************************************
// Arena Small Town 1
	else if(whichArena==4) 
	{

try
{
backgroundImage = Image.createImage(imagename);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
arenaImage= Image.createImage(imagename1);
Arena=new TiledLayer(15,19,arenaImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                   { 1, 1, 1, 1, 1, 1, 38, 39, 40, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 38, 39, 40, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 41, 1, 1, 41, 1, 1, 1, 1, 1, 1, 1, 41, 1, 1, 41 },
                { 42, 1, 1, 42, 1, 1, 1, 1, 1, 1, 1, 42, 1, 1, 42 },
                { 43, 1, 1, 43, 1, 1, 1, 1, 1, 1, 1, 43, 1, 1, 43 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 41, 1, 1, 42, 1, 1, 1, 1, 1, 1, 1, 42, 1, 1, 42 },
                { 42, 1, 1, 42, 1, 1, 1, 1, 1, 1, 1, 42, 1, 1, 42 },
                { 43, 1, 1, 43, 1, 1, 1, 1, 1, 1, 1, 43, 1, 1, 43 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 38, 39, 40, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 38, 39, 40, 1, 1, 1, 1, 1, 1 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 65, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 30, 30, 0, 30, 30, 30, 69, 30, 30, 30, 0, 30, 30, 0 },
                { 0, 69, 69, 0, 69, 69, 69, 69, 69, 69, 69, 0, 69, 69, 0 },
                { 0, 30, 30, 0, 30, 30, 30, 30, 30, 30, 30, 0, 30, 30, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 30, 30, 0, 30, 30, 30, 30, 30, 30, 30, 0, 30, 30, 0 },
                { 0, 65, 69, 0, 69, 69, 69, 69, 69, 65, 69, 0, 69, 69, 0 },
                { 0, 30, 30, 0, 30, 30, 30, 69, 30, 30, 30, 0, 30, 30, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 30, 69, 30, 0, 0, 0, 0, 0, 0 },
                { 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
        	}
//**********************************************************	

	

//************************************************************
// Arena Small Town 2
	else if(whichArena==5) 
	{

try
{
backgroundImage = Image.createImage(imagename1);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                 { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 },
                { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 30, 30, 30, 30, 30, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 30, 30, 30, 30, 30, 30, 30, 0, 30, 0, 0 },
                { 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0 },
                { 0, 0, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
  	}
//**********************************************************




//************************************************************
// Arena Small Town 3
	else if(whichArena==6) 
	{

try
{
backgroundImage = Image.createImage(imagename1);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                  { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 38, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 38 },
                { 0, 17, 0, 17, 0, 30, 0, 30, 0, 30, 0, 17, 0, 17, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 30, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 17, 0, 17, 0, 30, 0, 0, 0, 30, 0, 17, 0, 17, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 30, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 30, 18, 30, 18, 30, 0, 30, 0, 30, 18, 30, 18, 30, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 32, 18, 0, 18, 32, 18, 0, 13, 0, 18, 32, 18, 0, 18, 32 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 32, 18, 0, 18, 32, 18, 0, 13, 0, 18, 32, 18, 0, 18, 32 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 30, 18, 30, 18, 30, 0, 30, 0, 30, 18, 30, 18, 30, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 30, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 17, 0, 17, 0, 30, 0, 0, 0, 30, 0, 17, 0, 17, 0 },
                { 0, 0, 0, 0, 0, 30, 0, 30, 0, 30, 0, 0, 0, 0, 0 },
                { 0, 17, 0, 17, 0, 30, 0, 30, 0, 30, 0, 17, 0, 17, 0 },
                { 38, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 38 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
   	}
//**********************************************************		

else if(whichArena==7) 
	{

try
{
backgroundImage = Image.createImage(imagename);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 },
                { 4, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4 },
                { 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 0, 13, 0 },
                { 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 13, 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 0, 0 },
                { 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 13, 13, 0, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 0, 0, 0, 0, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 0, 0, 0, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 0, 0, 0, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 0, 0, 0, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 0, 0, 0, 0, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 13, 0, 13, 13, 13, 0, 13, 0, 13, 0 },
                { 0, 13, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0 },
                { 0, 0, 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 13, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0 },
                { 0, 13, 0, 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0 },
                { 6, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 6 },
                { 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
   	}
//**********************************************************		



//**********************************************************		

else if(whichArena==8) 
	{

try
{
backgroundImage = Image.createImage(imagename);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                  { 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16 },
                { 16, 16, 41, 16, 41, 16, 41, 16, 41, 16, 41, 16, 41, 16, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 16 },
                { 16, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 42, 16, 16 },
                { 16, 16, 43, 16, 43, 16, 43, 16, 43, 16, 43, 16, 43, 16, 16 },
                { 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
               { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
                { 0, 44, 0, 31, 0, 31, 0, 31, 0, 31, 0, 31, 0, 32, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 47, 0, 60, 0, 60, 0, 60, 0, 60, 0, 60, 0, 48, 0 },
                { 0, 46, 0, 64, 0, 64, 0, 64, 0, 64, 0, 64, 0, 45, 0 },
                { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
   	}
//**********************************************************		

//**********************************************************		

else if(whichArena==9) 
	{

try
{
backgroundImage = Image.createImage(imagename1);
Background = new TiledLayer(15, 19, backgroundImage, 16, 16);
Arena=new TiledLayer(15,19,backgroundImage,16,16);
}catch(Exception sds){}
Background.setPosition(0,16);
Arena.setPosition(0,16);


 int[][] tiles = {
                 { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Background.setCell(col, row, tiles[row][col]);
                }
        }
        

int[][] tiles1 = {
                { 22, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22 },
                { 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30 },
                { 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 30, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 0, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 0, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 0, 30, 30, 30, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 30 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 30, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0 },
                { 30, 30, 30, 30, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0 },
                { 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 22 }
            };
            for (int row = 0; row < 19; row++) {
                for (int col = 0; col < 15; col++) {
                    Arena.setCell(col, row, tiles1[row][col]);
                }
        }
   	}
//**********************************************************		


}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       
 


}